import logging
from aiogram import types, Router, F
from keyboards.main import get_main_menu
from keyboards.profile import get_profile_menu
from keyboards.cart import get_cart_keyboard
from data.usersdb import get_user_info

router = Router()


@router.message(lambda message: message.text == "/start")
async def start_command(message: types.Message):
    await message.answer("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=get_main_menu())


@router.message(F.text == "üõí –¢–æ–≤–∞—Ä—ã")
async def show_goods(message: types.Message):
    logging.info("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª —Ä–∞–∑–¥–µ–ª '–¢–æ–≤–∞—Ä—ã'")
    await message.answer("–í–æ—Ç —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤:", reply_markup=get_main_menu())


@router.message(F.text == "üõç –ö–æ—Ä–∑–∏–Ω–∞")
async def show_cart(message: types.Message):
    logging.info("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª —Ä–∞–∑–¥–µ–ª '–ö–æ—Ä–∑–∏–Ω–∞'")
    await message.answer("–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞:", reply_markup=get_cart_keyboard())


@router.message(F.text == "üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å")
async def show_profile(message: types.Message):
    logging.info("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª —Ä–∞–∑–¥–µ–ª '–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å'")
    user_id = message.from_user.id

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    user_info = get_user_info(user_id)

    if user_info:
        name, phone, address, additional_phones_str = user_info
        additional_phones = "\n".join(eval(additional_phones_str))  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç—Ä–æ–∫—É –≤ —Å–ø–∏—Å–æ–∫

        profile_info = (f"–ò–º—è: {name}\n"
                        f"–¢–µ–ª–µ—Ñ–æ–Ω: {phone}\n"
                        f"–ê–¥—Ä–µ—Å: {address}\n"
                        f"–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–æ–º–µ—Ä–∞:\n{additional_phones}")
        await message.answer(f"–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\n{profile_info}", reply_markup=get_profile_menu())
    else:
        await message.answer("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ—Ñ–∏–ª–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.", reply_markup=get_profile_menu())
