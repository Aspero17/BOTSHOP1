from aiogram import Router, types
from aiogram.fsm.context import FSMContext
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from handlers.goods import Goods  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –≤–∞—à–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è
from utils.db import get_categories, get_manufacturers_by_category, get_products_by_category

router = Router()

# –ò—Å–ø–æ–ª—å–∑—É–µ–º –ª—è–º–±–¥–∞-—Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /adminpanelspb
@router.message(lambda message: message.text == "/adminpanelspb")
async def admin_panel_handler(message: types.Message, state: FSMContext):
    if message.from_user.id == 730393028:  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à –Ω–∞—Å—Ç–æ—è—â–∏–π ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        await state.clear()  # –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–µ—Ä–µ–¥ –≤—Ö–æ–¥–æ–º –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å
        await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å!")
    else:
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏.")

@router.message(Goods.product_selection)  # –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
async def show_categories(message: types.Message):
    categories = get_categories()
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)

    for category in categories:
        keyboard.add(KeyboardButton(category))

    keyboard.add(KeyboardButton("üîô –ù–∞–∑–∞–¥"))
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–æ–≤:", reply_markup=keyboard)

@router.message(Goods.category)  # –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
async def handle_category_selection(message: types.Message, state: FSMContext):
    category = message.text
    manufacturers = get_manufacturers_by_category(category)

    if manufacturers:
        keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
        for manufacturer in manufacturers:
            keyboard.add(KeyboardButton(manufacturer))
        keyboard.add(KeyboardButton("üîô –ù–∞–∑–∞–¥"))
        await message.answer(f"–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '{category}':", reply_markup=keyboard)
        await state.update_data(selected_category=category)
    else:
        products = get_products_by_category(category)
        if products:
            keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
            for product in products:
                keyboard.add(KeyboardButton(product['name']))
            keyboard.add(KeyboardButton("üîô –ù–∞–∑–∞–¥"))
            await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–¥—É–∫—Ç –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è:", reply_markup=keyboard)
        else:
            await message.answer("–ü—Ä–æ–¥—É–∫—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
